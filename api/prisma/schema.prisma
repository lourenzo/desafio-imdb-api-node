// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id Int @id @default(autoincrement())

  email String @unique
  name  String

  isAdmin Boolean @default(false)

  isActive Boolean @default(true) // Soft Delete

  userRatings UserRating[]
}

model Title {
  id Int @id @default(autoincrement())

  tconst String @db.VarChar(10)
  titleType String @db.VarChar(16)// TODO: use enum @map("type")

  primaryTitle         String @db.VarChar(500)
  originalTitle String @db.VarChar(500)
  isAdult Boolean
  startYear Int @db.SmallInt
  endYear Int @db.SmallInt
  year          Int    @db.SmallInt
  runtimeMinutes   Int

  posterUrl  String  @db.VarChar(500)
  trailerUrl String? @db.VarChar(500)

  genres Json /// String[]

  directors Json /// String[]
  writers   Json /// String[]

  stars     Json /// String[]

  isActive Boolean @default(true) /// Soft Delete

  // Relations
  userRatings UserRating[]
  principals        TitlePrincipals[]
}

model Name {
  id Int @id @default(autoincrement())

  name       String  @db.VarChar(500)
  pictureUrl String? @db.VarChar(500)

  knowForTitles TitlePrincipals[]
}

model TitlePrincipals {
  id Int @id @default(autoincrement())

  titleId Int
  ordering Int

  nameId Int

  roles Json // String[]

  title Title @relation(fields: [titleId], references: [id])
  actor Name @relation(fields: [nameId], references: [id])
}

model UserRating {
  id Int @id @default(autoincrement())

  userId  Int
  titleId Int

  rating Int // 1-10// TODO: improve naming and constraints

  title Title @relation(fields: [titleId], references: [id])
  user  User  @relation(fields: [userId], references: [id])
}
